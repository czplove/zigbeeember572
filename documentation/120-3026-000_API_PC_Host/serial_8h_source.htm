<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the PC Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the PC Host platform
   &#160;<span id="projectnumber">EmberZNet 5.7.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('serial_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">serial.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="serial_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef __SERIAL_H__</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __SERIAL_H__</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#ifndef __HAL_H__</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #error hal/hal.h should be included first</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;stdarg.h&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">//Rx FIFO Full indicator</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#define RX_FIFO_FULL (0xFFFF)</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#endif // DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga34b433d5bc028d584f8b77a9e24b5571" title="Initializes a serial port to a specific baud rate, parity, and number of stop bits. Eight data bits are always used.">emberSerialInit</a>(uint8_t port, </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                            SerialBaudRate rate,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                            SerialParity parity,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                            uint8_t stopBits);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;uint16_t <a class="code" href="group__serial__comm.htm#gaaecf02be97a3d08d0c19c9420d0a35bd" title="Returns the number of bytes currently available for reading in the specified RX queue.">emberSerialReadAvailable</a>(uint8_t port);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gaa6c47ba1de1015a7b30959a3c3163ab0" title="Reads a byte from the specified RX queue. If an error is returned, the dataByte should be ignored...">emberSerialReadByte</a>(uint8_t port, uint8_t *dataByte);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga37f0f389377d7f53714835750c763bf4" title="Reads bytes from the specified RX queue. Blocks until the full length has been read or an error occur...">emberSerialReadData</a>(uint8_t port,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                uint8_t *data,</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                uint16_t length,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                uint16_t *bytesRead);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gac23d09cb1c4b76030a873f22601c141c" title="Reads bytes from the specified RX queue, up to a maximum of length bytes. The function may return bef...">emberSerialReadDataTimeout</a>(uint8_t port,</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                       uint8_t *data,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                       uint16_t length,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                       uint16_t *bytesRead,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                       uint16_t firstByteTimeout,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                       uint16_t subsequentByteTimeout);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga956cccc98a61334ccc178a8242093767" title="Simulates a terminal interface, reading a line of characters at a time. Supports backspace. Always converts to uppercase. Blocks until a line has been read or max has been exceeded. Calls on halResetWatchdog().">emberSerialReadLine</a>(uint8_t port, <span class="keywordtype">char</span> *data, uint8_t max);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga0458ca411c8ea7f5ca00807421406080" title="Simulates a partial terminal interface, reading a line of characters at a time. Supports backspace...">emberSerialReadPartialLine</a>(uint8_t port, <span class="keywordtype">char</span> *data, uint8_t max, uint8_t *index);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;uint16_t <a class="code" href="group__serial__comm.htm#gace715d88d33c8b9fb14b809b6b363213" title="Returns the number of bytes (in FIFO mode) or messages (in buffered mode) that can currently be queue...">emberSerialWriteAvailable</a>(uint8_t port);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;uint16_t <a class="code" href="group__serial__comm.htm#ga5c8579119b8f0b717373df075ad08669" title="Returns the number of bytes (in FIFO mode) or messages (in buffered mode) that are currently queued a...">emberSerialWriteUsed</a>(uint8_t port);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gadcee0891338d844889f8890e3b91b533" title="Queues a single byte of data for transmission on the specified port.">emberSerialWriteByte</a>(uint8_t port, uint8_t dataByte);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga86c272c8d47fa301728e6e35962b64da" title="Converts a given byte of data to its two-character ASCII hex representation and queues it for transmi...">emberSerialWriteHex</a>(uint8_t port, uint8_t dataByte);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga210c9ed48648ec2ed7ae605637f99c31" title="Queues a string for transmission on the specified port.">emberSerialWriteString</a>(uint8_t port, PGM_P <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;XAP2B_PAGEZERO_ON</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gaf49fc3ca066e29748d4d0fdc7df534e6" title="Printf for printing on a specified port. Supports the following format specifiers:">emberSerialPrintf</a>(uint8_t port, PGM_P formatString, ...);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;XAP2B_PAGEZERO_OFF</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;XAP2B_PAGEZERO_ON</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga570ed4076199ff779d545cd34542ba4c" title="Printf for printing on a specified port. Same as emberSerialPrintf() except it prints a carriage retu...">emberSerialPrintfLine</a>(uint8_t port, PGM_P formatString, ...);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;XAP2B_PAGEZERO_OFF</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;XAP2B_PAGEZERO_ON</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gac6fd5bc5e84cde0fae179b2de83c4d41" title="Prints &quot;\r\n&quot; to the specified serial port.">emberSerialPrintCarriageReturn</a>(uint8_t port);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;XAP2B_PAGEZERO_OFF</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gab68464c024b5fa28d233d02e69dd5b5f" title="Prints a format string with a variable argument list.">emberSerialPrintfVarArg</a>(uint8_t port, PGM_P formatString, va_list ap);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga20bafa011c32d634e415170bfa7dd8ac" title="Queues an arbitrary chunk of data for transmission on a specified port.">emberSerialWriteData</a>(uint8_t port, uint8_t *data, uint8_t length);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">//Host HALs do not use stack buffers.</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="preprocessor">#ifndef HAL_HOST</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gaceea408da2aaa63569d885c06310a73a" title="Queues data contained in linked stack buffers for transmission on a specified port. Can specify an arbitrary initial offset within the linked buffer chain.">emberSerialWriteBuffer</a>(uint8_t port, <a class="code" href="group__ember__types.htm#gad8cef59e716103f3996ce6cb7e10b017" title="Incoming and outgoing messages are stored in buffers. These buffers are allocated and freed as needed...">EmberMessageBuffer</a> buffer, uint8_t start, uint8_t length);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="preprocessor">#endif //HAL_HOST</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;XAP2B_PAGEZERO_ON</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#gad9806223fd8a45daa3abbedfae05ce74" title="Waits for all data currently queued on the specified port to be transmitted before returning...">emberSerialWaitSend</a>(uint8_t port);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;XAP2B_PAGEZERO_OFF</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__serial__comm.htm#ga97b3a360e2d0f719ecfd6ba70633023a" title="A printf routine that takes over the specified serial port and immediately transmits the given data r...">emberSerialGuaranteedPrintf</a>(uint8_t port, PGM_P formatString, ...);</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__serial__comm.htm#gaf721671bb351885fbc42f7af0115bd34" title="When a serial port is used in buffered mode, this must be called in an application&#39;s main event loop...">emberSerialBufferTick</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__serial__comm.htm#gab66c4a051fbbae3a938d8e01f408e5a5" title="Flushes the receive buffer in case none of the incoming serial data is wanted.">emberSerialFlushRx</a>(uint8_t port);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__serial__comm.htm#ga88dbef18c629159086e94f6c94999470" title="Indicates whether the port is unused or invalid.">emberSerialUnused</a>(uint8_t port);</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="preprocessor">#endif // __SERIAL_H__</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the PC Host platform. EmberZNet 5.7.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
